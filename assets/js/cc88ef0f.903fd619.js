"use strict";(self.webpackChunkdev_blink_sv=self.webpackChunkdev_blink_sv||[]).push([[946],{697:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>j,contentTitle:()=>g,default:()=>w,frontMatter:()=>m,metadata:()=>y,toc:()=>v});var a=t(4848),s=t(5680),i=t(1276),r=t(2108),l=t(230),o=t(2685),d=t(6540),c=t(4325),h=t(2556);function u(){const{authToken:e,apiEndpoint:n,accountWalletId:t,setAccountWalletId:s}=(0,i.A)(),[r,l]=(0,d.useState)(),[o,u]=(0,d.useState)(100),[p,x]=(0,d.useState)(""),[m,g]=(0,d.useState)(null),[y,j]=(0,d.useState)(null),v="query onChainUsdTxFee($walletId: WalletId!, $address: OnChainAddress!, $amount: CentAmount!) {\n  onChainUsdTxFee(walletId: $walletId, address: $address, amount: $amount) {\n    amount\n  }\n}";(0,d.useEffect)((()=>{(0,h.lc)({operation:v,type:"onChainTxFee",setCurlCommand:x,authToken:e,apiEndpoint:n,walletId:t,address:r,amount:o})}),[e,n,t,o,r]);return(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{style:{fontWeight:"bold"},children:"Set the variables"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("div",{children:(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"Amount (USD cents):"}),(0,a.jsx)("input",{type:"number",value:o,onChange:e=>{u(e.target.value)},style:{marginLeft:"10px",width:"50%"}})]})}),(0,a.jsx)("div",{children:(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"Onchain address:"}),(0,a.jsx)("input",{type:"text",value:r,onChange:e=>{l(e.target.value)},style:{marginLeft:"10px",width:"50%"}})]})}),(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"USD wallet ID:"}),(0,a.jsx)("input",{type:"text",value:t,onChange:e=>{s(e.target.value)},style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"})]})]}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("button",{onClick:async()=>{j(null),g(null);const a={walletId:t,address:r,amount:o};try{const s=await(0,c.t)(e,n,v,a);g(s),(0,h.lc)({operation:v,type:"onChainTxFee",setCurlCommand:x,authToken:e,apiEndpoint:n,walletId:t,address:r,amount:o})}catch(s){j(s.message)}},children:"Estimate the transaction fee"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),y&&(0,a.jsxs)("div",{style:{color:"red"},children:["Error: ",y]}),m&&(0,a.jsxs)("div",{children:[(0,a.jsx)("strong",{children:"Response:"})," ",(0,a.jsx)("pre",{style:{marginLeft:"10px"},children:JSON.stringify(m,null,2)})]}),(0,a.jsxs)("div",{style:{marginTop:"20px",marginBottom:"40px"},children:[(0,a.jsx)("div",{style:{fontWeight:"bold"},children:"curl command to estimate the transaction fee"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"},children:p})]})]})}function p(){const{authToken:e,apiEndpoint:n,accountWalletId:t,setAccountWalletId:s}=(0,i.A)(),[r,l]=(0,d.useState)(),[o,u]=(0,d.useState)(100),[p,x]=(0,d.useState)(""),[m,g]=(0,d.useState)(null),[y,j]=(0,d.useState)(null),v="mutation onChainUsdPaymentSend($input: OnChainUsdPaymentSendInput!) {\n  onChainUsdPaymentSend(input: $input) {\n    errors {\n      message\n    }\n    status\n  }\n}";(0,d.useEffect)((()=>{(0,h.lc)({operation:v,type:"onChainSend",setCurlCommand:x,authToken:e,apiEndpoint:n,walletId:t,address:r,amount:o})}),[e,n,t,o,r]);return(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{style:{fontWeight:"bold"},children:"Set the variables"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("div",{children:(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"Amount (USD cents):"}),(0,a.jsx)("input",{type:"number",value:o,onChange:e=>{u(e.target.value)},style:{marginLeft:"10px",width:"50%"}})]})}),(0,a.jsx)("div",{children:(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"Onchain address:"}),(0,a.jsx)("input",{type:"text",value:r,onChange:e=>{l(e.target.value)},style:{marginLeft:"10px",width:"50%"}})]})}),(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"USD wallet ID:"}),(0,a.jsx)("input",{type:"text",value:t,onChange:e=>{s(e.target.value)},style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"})]})]}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("button",{onClick:async()=>{j(null),g(null);const a={input:{walletId:t,address:r,amount:o}};try{const s=await(0,c.t)(e,n,v,a);g(s),(0,h.lc)({operation:v,type:"onChainSend",setCurlCommand:x,authToken:e,apiEndpoint:n,walletId:t,address:r,amount:o})}catch(s){j(s.message)}},children:"Send the transaction"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),y&&(0,a.jsxs)("div",{style:{color:"red"},children:["Error: ",y]}),m&&(0,a.jsxs)("div",{children:[(0,a.jsx)("strong",{children:"Response:"})," ",(0,a.jsx)("pre",{style:{marginLeft:"10px"},children:JSON.stringify(m,null,2)})]}),(0,a.jsxs)("div",{style:{marginTop:"20px",marginBottom:"40px"},children:[(0,a.jsx)("div",{style:{fontWeight:"bold"},children:"curl command to send the transaction"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"},children:p})]})]})}function x(){const{authToken:e,apiEndpoint:n,accountWalletId:t,setAccountWalletId:s}=(0,i.A)(),[r,l]=(0,d.useState)(),[o,u]=(0,d.useState)(546),[p,x]=(0,d.useState)(""),[m,g]=(0,d.useState)(null),[y,j]=(0,d.useState)(null),v="mutation onChainUsdPaymentSendAsBtcDenominated($input: OnChainUsdPaymentSendAsBtcDenominatedInput!) {\n  onChainUsdPaymentSendAsBtcDenominated(input: $input) {\n    errors {\n      message\n    }\n    status\n  }\n}";(0,d.useEffect)((()=>{(0,h.lc)({operation:v,type:"onChainSend",setCurlCommand:x,authToken:e,apiEndpoint:n,walletId:t,address:r,amount:o})}),[e,n,t,o,r]);return(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{style:{fontWeight:"bold"},children:"Set the variables"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("div",{children:(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"Amount (sats):"}),(0,a.jsx)("input",{type:"number",value:o,onChange:e=>{u(e.target.value)},style:{marginLeft:"10px",width:"50%"}})]})}),(0,a.jsx)("div",{children:(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"Onchain address:"}),(0,a.jsx)("input",{type:"text",value:r,onChange:e=>{l(e.target.value)},style:{marginLeft:"10px",width:"50%"}})]})}),(0,a.jsxs)("label",{children:[(0,a.jsx)("div",{children:"USD wallet ID:"}),(0,a.jsx)("input",{type:"text",value:t,onChange:e=>{s(e.target.value)},style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"})]})]}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("button",{onClick:async()=>{j(null),g(null);const a={input:{walletId:t,address:r,amount:o}};try{const s=await(0,c.t)(e,n,v,a);g(s),(0,h.lc)({operation:v,type:"onChainSend",setCurlCommand:x,authToken:e,apiEndpoint:n,walletId:t,address:r,amount:o})}catch(s){j(s.message)}},children:"Send the transaction"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),y&&(0,a.jsxs)("div",{style:{color:"red"},children:["Error: ",y]}),m&&(0,a.jsxs)("div",{children:[(0,a.jsx)("strong",{children:"Response:"})," ",(0,a.jsx)("pre",{style:{marginLeft:"10px"},children:JSON.stringify(m,null,2)})]}),(0,a.jsxs)("div",{style:{marginTop:"20px",marginBottom:"40px"},children:[(0,a.jsx)("div",{style:{fontWeight:"bold"},children:"curl command to send the transaction"}),(0,a.jsx)("div",{style:{marginTop:"10px"}}),(0,a.jsx)("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"},children:p})]})]})}const m={id:"usd-onchain-send",title:"Send USD onchain",slug:"/api/legacy/usd-onchain-send"},g=void 0,y={id:"api/legacy/usd-onchain-send",title:"Send USD onchain",description:"Get the wallet IDs and check the balances",source:"@site/docs/api/legacy/usd-onchain-send.mdx",sourceDirName:"api/legacy",slug:"/api/legacy/usd-onchain-send",permalink:"/api/legacy/usd-onchain-send",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"usd-onchain-send",title:"Send USD onchain",slug:"/api/legacy/usd-onchain-send"}},j={},v=[{value:"Get the wallet IDs and check the balances",id:"get-the-wallet-ids-and-check-the-balances",level:3},{value:"Estimate",id:"estimate",level:3},{value:"Send a transaction in USD cents",id:"send-a-transaction-in-usd-cents",level:3},{value:"Send a transaction in satoshis",id:"send-a-transaction-in-satoshis",level:3}];function f(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.RP)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i.O,{children:[(0,a.jsx)(r.a,{}),(0,a.jsx)(l.K,{}),(0,a.jsx)(n.h3,{id:"get-the-wallet-ids-and-check-the-balances",children:"Get the wallet IDs and check the balances"}),(0,a.jsxs)(n.p,{children:["Can run this query at any stage to confirm the change in the balances.",(0,a.jsx)("br",{}),'\nThe "BTC" wallet balance is denominated in satoshis.',(0,a.jsx)("br",{}),'\nThe "USD" wallet balance is in cents.']}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"The body of the GraphQL request"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"query Me {\n  me {\n    defaultAccount {\n      wallets {\n        id\n        walletCurrency\n        balance\n      }\n    }\n  }\n}\n"})}),(0,a.jsx)(o.S,{}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"estimate",children:"Estimate"}),(0,a.jsx)(n.p,{children:"Estimate how many satoshis the transaction will cost."}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"The body of the GraphQL request"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"query onChainUsdTxFee($walletId: WalletId!, $address: OnChainAddress!, $amount: CentAmount!) {\n  onChainUsdTxFee(walletId: $walletId, address: $address, amount: $amount) {\n    amount\n  }\n}\n"})}),(0,a.jsx)(u,{}),(0,a.jsx)(n.h3,{id:"send-a-transaction-in-usd-cents",children:"Send a transaction in USD cents"}),(0,a.jsxs)(n.p,{children:["Send a transaction onchain from your USD account with the amount denominated in USD cents.",(0,a.jsx)("br",{}),"\nThe satoshi amount will be calculated based on the current exchange rate."]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"The body of the GraphQL request"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"mutation onChainPaymentSend($input: OnChainPaymentSendInput!) {\n  onChainPaymentSend(input: $input) {\n    errors {\n      message\n    }\n    status\n  }\n}\n"})}),(0,a.jsx)(p,{}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"send-a-transaction-in-satoshis",children:"Send a transaction in satoshis"}),(0,a.jsxs)(n.p,{children:["Send a transaction onchain from your USD account with the amount denominated in satoshis.",(0,a.jsx)("br",{})]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"The body of the GraphQL request"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"mutation onChainUsdPaymentSendAsBtcDenominated($input: OnChainUsdPaymentSendAsBtcDenominatedInput!) {\n  onChainUsdPaymentSendAsBtcDenominated(input: $input) {\n    errors {\n      message\n    }\n    status\n  }\n}\n"})}),(0,a.jsx)(x,{})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["To test the GraphQL requests further use the GraphQL playground at ",(0,a.jsx)(n.a,{href:"https://api.blink.sv/graphql",children:"api.blink.sv/graphql"})," for mainnet or ",(0,a.jsx)(n.a,{href:"https://api.staging.galoy.io/graphql",children:"api.staging.galoy.io/graphql"})," for staging.",(0,a.jsx)("br",{}),"\nCheck out the ",(0,a.jsx)(n.a,{href:"https://documenter.getpostman.com/view/29391384/2s9YCAQq3z#ed78e464-9874-4bf7-9b7b-92e5a898db83",children:"Galoy API Postman collection"})," to find examples in multiple programming languages."]})})]})}function w(e={}){const{wrapper:n}={...(0,s.RP)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>d});var a=t(6540);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=a.createContext({}),d=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,o=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),u=d(t),p=s,x=u["".concat(o,".").concat(p)]||u[p]||c[p]||i;return t?a.createElement(x,r(r({ref:n},h),{},{components:t})):a.createElement(x,r({ref:n},h))}));h.displayName="MDXCreateElement"},1276:(e,n,t)=>{t.d(n,{A:()=>r,O:()=>l});var a=t(6540),s=t(4848);const i=(0,a.createContext)(),r=()=>(0,a.useContext)(i),l=e=>{let{children:n}=e;const[t,r]=(0,a.useState)(null),[l,o]=(0,a.useState)("https://api.blink.sv/graphql"),[d,c]=(0,a.useState)(""),[h,u]=(0,a.useState)(""),p={authToken:t,setAuthToken:r,apiEndpoint:l,setApiEndpoint:o,accountWalletId:d,setAccountWalletId:c,paymentRequest:h,setPaymentRequest:u};return(0,s.jsx)(i.Provider,{value:p,children:n})}},2685:(e,n,t)=>{t.d(n,{S:()=>o});var a=t(6540),s=t(4325),i=t(1276),r=t(2556),l=t(4848);function o(){const{authToken:e,apiEndpoint:n}=(0,i.A)(),[t,o]=(0,a.useState)(""),[d,c]=(0,a.useState)(null),[h,u]=(0,a.useState)(null),p="  query Me {\n    me {\n      defaultAccount {\n        wallets {\n          id\n          walletCurrency\n          balance\n        }\n      }\n    }\n  }";return(0,a.useEffect)((()=>{(0,r.lc)({operation:p,type:"wallet",setCurlCommand:o,authToken:e,apiEndpoint:n,walletCurrency:"USD"})}),[e,n]),(0,l.jsxs)("div",{children:[(0,l.jsx)("button",{onClick:async()=>{u(null),c(null);try{const t=await(0,s.t)(e,n,p);c(t),(0,r.lc)({operation:p,type:"wallet",setCurlCommand:o,authToken:e,apiEndpoint:n,walletCurrency:"USD"})}catch(t){u(t.message)}},children:"Send the request"}),(0,l.jsx)("div",{style:{marginTop:"10px"}}),h&&(0,l.jsxs)("div",{style:{color:"red"},children:["Error: ",h]}),d&&(0,l.jsxs)("div",{children:[(0,l.jsx)("strong",{children:"Response:"})," ",(0,l.jsx)("pre",{style:{marginLeft:"10px"},children:JSON.stringify(d,null,2)})]}),(0,l.jsxs)("div",{style:{marginTop:"20px",marginBottom:"40px"},children:[(0,l.jsx)("div",{style:{fontWeight:"bold"},children:"curl command to get the USD wallet ID"}),(0,l.jsx)("div",{style:{marginTop:"10px"}}),(0,l.jsx)("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"},children:t})]})]})}},2108:(e,n,t)=>{t.d(n,{a:()=>i});t(6540);var a=t(1276),s=t(4848);function i(){const{apiEndpoint:e,setApiEndpoint:n}=(0,a.A)();return(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:"The GraphQL endpoint to connect to:"}),(0,s.jsxs)("select",{type:"text",value:e,onChange:e=>{n(e.target.value)},style:{width:"50%",marginBottom:"10px"},children:[(0,s.jsx)("option",{value:"https://api.blink.sv/graphql",children:"Blink (mainnet) - https://api.blink.sv/graphql"}),(0,s.jsx)("option",{value:"https://api.staging.galoy.io/graphql",children:"Staging (signet) - https://api.staging.galoy.io/graphql"})]})]})}},230:(e,n,t)=>{t.d(n,{K:()=>i});t(6540);var a=t(1276),s=t(4848);function i(){const{setAuthToken:e}=(0,a.A)();return(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{children:"A valid authentication token is required in the header as a bearer token:"}),(0,s.jsx)("input",{type:"text",placeholder:"Paste the authentication token to use it",onChange:n=>{e(n.target.value)},style:{width:"50%",marginBottom:"10px"}})]})}},4325:(e,n,t)=>{t.d(n,{t:()=>a});const a=async function(e,n,t,a){if(void 0===a&&(a={}),!e)throw new Error("Not authenticated");if(!t)throw new Error("No GraphQL query provided");try{const s=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`bearer ${e}`},body:JSON.stringify({query:t,variables:a})});if(!s.ok){const e=await s.text();throw new Error(`Error response from server: ${e}`)}const i=s.headers.get("content-type");if(i&&i.includes("application/json")){return await s.json()}throw new Error(`Unexpected content type: ${i}`)}catch(s){throw console.error("There was an error making the authenticated request:",s),s}}},2556:(e,n,t)=>{t.d(n,{Wg:()=>s,ZD:()=>a,cp:()=>i,lc:()=>r});const a=(e,n)=>{const t={email:n};return`curl -X POST '${e}/email/code' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data '${JSON.stringify(t)}'`},s=(e,n,t)=>{const a={query:"mutation login($input: UserLoginInput!) { userLogin(input: $input) { authToken } }",variables:{input:{phone:n,code:t}}};return`curl '${e}' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data-binary '${JSON.stringify(a)}'`},i=(e,n,t)=>`curl -X POST '${`${e}/email/login`}' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data '${JSON.stringify({code:t,emailLoginId:n})}'`;function r(e){let{operation:n,type:t="",setCurlCommand:a,authToken:s,apiEndpoint:i,amount:r,paymentRequest:l="",walletId:o="",walletCurrency:d="",address:c}=e,h={query:n.trim(),variables:{}};const u=s?`--header 'Authorization: Bearer ${s}'`:"--header 'Authorization: Bearer <YOUR_AUTH_TOKEN_HERE>'";"invoice"===t?h.variables.input={amount:r.toString(),walletId:o}:"feeProbe"===t||"lnInvoicePaymentSend"===t?h.variables.input={paymentRequest:l,walletId:o}:"onChainTxFee"===t?h.variables={walletId:o,address:c,amount:r}:"onChainSend"===t&&(h.variables.input={walletId:o,address:c,amount:r});let p=JSON.stringify(h).replace(/\n/g,"");a("wallet"===t?`curl -sS --request POST --header 'content-type: application/json' \\\n  ${u} \\\n  --url '${i}' \\\n  --data '{"query":"query me { me { defaultAccount { wallets { id walletCurrency }}}}", "variables":{}}' \\\n| jq '.data.me.defaultAccount.wallets[] | select(.walletCurrency == "${d}") .id'`:`curl --request POST --header 'content-type: application/json' \\\n  ${u} \\\n  --url '${i}' \\\n  --data '${p}'`)}}}]);