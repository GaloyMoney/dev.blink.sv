"use strict";(self.webpackChunkdev_blink_sv=self.webpackChunkdev_blink_sv||[]).push([[389],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(n),d=l,v=p["".concat(c,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(v,i(i({ref:t},u),{},{components:n})):a.createElement(v,i({ref:t},u))}));function v(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4746:(e,t,n)=>{n.d(t,{H:()=>i,a:()=>r});var a=n(7294);const l=(0,a.createContext)(),r=()=>(0,a.useContext)(l),i=e=>{let{children:t}=e;const[n,r]=(0,a.useState)(null),i={authToken:n,setAuthToken:r};return a.createElement(l.Provider,{value:i},t)}},7900:(e,t,n)=>{n.d(t,{K:()=>a});const a=async function(e,t,n,a){if(void 0===a&&(a={}),!e)throw new Error("Not authenticated");if(!n)throw new Error("No GraphQL query provided");try{const l=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`bearer ${e}`},body:JSON.stringify({query:n,variables:a})});if(!l.ok){const e=await l.text();throw new Error(`Error response from server: ${e}`)}const r=l.headers.get("content-type");if(r&&r.includes("application/json")){return await l.json()}throw new Error(`Unexpected content type: ${r}`)}catch(l){throw console.error("There was an error making the authenticated request:",l),l}}},661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(7462),l=n(7294),r=n(3905),i=n(4746),o=n(7900);const c=function(){const{authToken:e,setAuthToken:t}=(0,i.a)(),[n,a]=(0,l.useState)("https://api.blink.sv/graphql"),[r,c]=(0,l.useState)(""),[s,u]=(0,l.useState)(100),[p,m]=(0,l.useState)(""),[d,v]=(0,l.useState)(""),[h,y]=(0,l.useState)(""),[g,f]=(0,l.useState)(""),[E,b]=(0,l.useState)(""),[w,S]=(0,l.useState)(""),[x,T]=(0,l.useState)(null),[P,k]=(0,l.useState)(null),[C,O]=(0,l.useState)(null),[I,L]=(0,l.useState)(null),[q,D]=(0,l.useState)(null),[U,j]=(0,l.useState)(null),[A,B]=(0,l.useState)(null),[$,R]=(0,l.useState)(null),N="  query Me {\n    me {\n      defaultAccount {\n        wallets {\n          id\n          walletCurrency\n          balance\n        }\n      }\n    }\n  }",W="mutation lnUsdInvoiceCreate($input: LnUsdInvoiceCreateInput!) {\n  lnUsdInvoiceCreate(input: $input) {\n    invoice {\n      paymentRequest\n      paymentHash\n      paymentSecret\n      satoshis\n    }\n    errors {\n      message\n    }\n  }\n}",G=(e,t)=>W,X="mutation lnUsdInvoiceFeeProbe($input: LnUsdInvoiceFeeProbeInput!) {\n  lnUsdInvoiceFeeProbe(input: $input) {\n    errors {\n      message\n    }\n    amount\n  }\n}",_=(e,t)=>X,J="mutation LnInvoicePaymentSend($input: LnInvoicePaymentInput!) {\n  lnInvoicePaymentSend(input: $input) {\n    status\n    errors {\n      message\n      path\n      code\n    }\n  }\n}",K=(e,t)=>J,M=function(t,a,l,r){void 0===l&&(l=""),void 0===r&&(r="");let i={query:t.trim(),variables:{}};const o=e?`--header 'Authorization: Bearer ${e}'`:"--header 'Authorization: Bearer <YOUR_AUTH_TOKEN_HERE>'";"invoice"===a?i.variables.input={amount:s.toString(),walletId:p}:"feeProbe"===a?i.variables.input={paymentRequest:l,walletId:p}:"lnInvoicePaymentSend"===a&&(i.variables.input={paymentRequest:l,walletId:r});let c=JSON.stringify(i).replace(/\n/g,"");const u=`curl --request POST --header 'content-type: application/json' \\\n    ${o} \\\n    --url '${n}' \\\n    --data '${c}'`;"wallet"===a?y(`curl -sS --request POST --header 'content-type: application/json' \\\n    ${o} \\\n    --url '${n}' \\\n    --data '{"query":"query me { me { defaultAccount { wallets { id walletCurrency }}}}", "variables":{}}' \\\n | jq '.data.me.defaultAccount.wallets[] | select(.walletCurrency == "USD") .id'`):"invoice"===a?f(u):"feeProbe"===a?b(u):"lnInvoicePaymentSend"===a&&S(u)};(0,l.useEffect)((()=>{M(N,"wallet")}),[e,n]),(0,l.useEffect)((()=>{const e=G();M(e,"invoice")}),[e,n,s,p]),(0,l.useEffect)((()=>{const e=_();M(e,"feeProbe",d,p)}),[e,n,d,p]),(0,l.useEffect)((()=>{const e=K();M(e,"lnInvoicePaymentSend",d,p)}),[e,n,d,p]);const Q=e=>{m(e.target.value)};function H(e){let{value:t,onChange:n,onSet:a}=e;return l.createElement("div",null,l.createElement("input",{type:"text",placeholder:"Paste and set the authentication token",value:t,onChange:n,style:{width:"50%",marginBottom:"10px"}}),l.createElement("div",null,l.createElement("button",{onClick:a},"Set token")))}const F=l.createElement(H,{value:r,onChange:e=>{c(e.target.value)},onSet:()=>{t(r)}});return l.createElement("div",null,l.createElement("div",null,"The GraphQL endpoint to connect to:"),l.createElement("select",{type:"text",value:n,onChange:e=>{a(e.target.value)},style:{width:"50%",marginBottom:"10px"}},l.createElement("option",{value:"https://api.blink.sv/graphql"},"Blink (mainnet) - https://api.blink.sv/graphql"),l.createElement("option",{value:"https://api.staging.galoy.io/graphql"},"Staging (signet) - https://api.staging.galoy.io/graphql")),l.createElement("div",null,"The following methods require a valid auth token set in the header as a bearer token:"),F,l.createElement("div",{style:{marginTop:"40px"}}),l.createElement("h3",null,"Get the wallet IDs and check the balances"),l.createElement("div",null,"Can run this query at any stage to confirm the change in the balances."),l.createElement("div",null,'The "BTC" wallet balance is denominated in satoshis.'),l.createElement("div",null,'The "USD" wallet balance is in cents.'),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",{style:{fontWeight:"bold"}},"The body of the GraphQL request:"),l.createElement("pre",{style:{marginLeft:"10px"}},N),l.createElement("button",{onClick:async()=>{try{const t=await(0,o.K)(e,n,N);T(t);const a=t?.me?.defaultAccount?.wallets?.find((e=>"BTC"===e.walletCurrency));a?.id&&m(a.id),M(N,"wallet")}catch(t){D(t.message)}}},"Send the request"),q&&l.createElement("div",{style:{color:"red"}},"Error: ",q),x&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(x,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("div",{style:{fontWeight:"bold"}},"curl command to get the USD wallet ID:"),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},h)),l.createElement("h3",null,"Generate a Stablesats invoice"),l.createElement("div",null,"Using Stablesats a merchant can generate invoices denominated in USD cents."),l.createElement("div",null,"The satoshi amount of the invoice will reflect the current USD/BTC exchange rate and the balance will be kept at the dollar value."),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",null,l.createElement("div",null,l.createElement("div",{style:{fontWeight:"bold"}},"Set the variables"),l.createElement("label",null,l.createElement("div",null,"Amount (USD cents):"),l.createElement("input",{type:"number",value:s,onChange:e=>{u(e.target.value)},style:{marginLeft:"10px",width:"50%"}}))),l.createElement("label",null,l.createElement("div",null,"USD wallet ID:"),l.createElement("input",{type:"text",value:p,onChange:Q,style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"}))),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",{style:{fontWeight:"bold"}},"The body of the GraphQL request:"),l.createElement("pre",{style:{marginLeft:"10px"}},W),l.createElement("button",{onClick:async()=>{const t=G(),a={input:{amount:s.toString(),walletId:p}};try{const l=await(0,o.K)(e,n,t,a);k(l),M(t,"invoice")}catch(l){j(l.message)}}},"Create a Stablesats invoice"),U&&l.createElement("div",{style:{color:"red"}},"Error: ",U),P&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(P,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("div",{style:{fontWeight:"bold"}},"curl command to generate a Stablesats invoice:"),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},g)),l.createElement("h3",null,"Probe invoice fee"),l.createElement("div",null,"Estimate the cost of paying a lightning invoice."),l.createElement("div",null,"Payments to an other Blink user and to nodes with a direct channel are free."),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",null,l.createElement("div",{style:{fontWeight:"bold"}},"Set the variables"),l.createElement("div",null,l.createElement("label",null,l.createElement("div",null,"Invoice"),l.createElement("input",{type:"text",value:d,onChange:e=>v(e.target.value),style:{marginLeft:"10px",width:"50%"},placeholder:"Paste a lightning invoice"}))),l.createElement("label",null,l.createElement("div",null,"USD wallet ID:"),l.createElement("input",{type:"text",value:p,onChange:Q,style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"}))),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",{style:{fontWeight:"bold"}},"The body of the GraphQL request:"),l.createElement("pre",{style:{marginLeft:"10px"}},X),l.createElement("button",{onClick:async()=>{const t=_(),a={input:{paymentRequest:d,walletId:p}};try{const l=await(0,o.K)(e,n,t,a);O(l),M(t,"feeProbe",d,p)}catch(l){B(l.message)}}},"Probe fee"),A&&l.createElement("div",{style:{color:"red"}},"Error: ",A),C&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(C,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("h4",null,"cURL command to probe invoice fee:"),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},E)),l.createElement("h3",null,"Pay an invoice"),l.createElement("div",null,"Pay a BOLT11 invoice from your Stablesats balance"),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",null,l.createElement("div",{style:{fontWeight:"bold"}},"Set the variables"),l.createElement("div",null,l.createElement("label",null,l.createElement("div",null,"Invoice"),l.createElement("input",{type:"text",value:d,onChange:e=>v(e.target.value),style:{marginLeft:"10px",width:"50%"},placeholder:"Paste a lightning invoice"}))),l.createElement("label",null,l.createElement("div",null,"USD wallet ID:"),l.createElement("input",{type:"text",value:p,onChange:Q,style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"}))),l.createElement("div",{style:{marginTop:"20px"}}),l.createElement("div",{style:{fontWeight:"bold"}},"The body of the GraphQL request:"),l.createElement("pre",{style:{marginLeft:"10px"}},J),l.createElement("button",{onClick:async()=>{const t=K(),a={input:{paymentRequest:d,walletId:p}};try{const l=await(0,o.K)(e,n,t,a);L(l),M(t,"lnInvoicePaymentSend",d,p)}catch(l){R(l.message)}}},"Send payment"),$&&l.createElement("div",{style:{color:"red"}},"Error: ",$),I&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(I,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("div",{style:{fontWeight:"bold"}},"curl command to pay an invoice:"),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},w)))},s={id:"api-stablesats",title:"Send and receive Stablesats",slug:"/api/stablesats"},u=void 0,p={unversionedId:"api/api-stablesats",id:"api/api-stablesats",title:"Send and receive Stablesats",description:"",source:"@site/docs/api/b-stablesats.md",sourceDirName:"api",slug:"/api/stablesats",permalink:"/api/stablesats",draft:!1,tags:[],version:"current",frontMatter:{id:"api-stablesats",title:"Send and receive Stablesats",slug:"/api/stablesats"},sidebar:"apiSidebar",previous:{title:"Get an authentication token",permalink:"/api/auth"},next:{title:"Send and receive satoshis",permalink:"/api/sats"}},m={},d=[],v={toc:d},h="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.H,{mdxType:"AuthProvider"},(0,r.kt)(c,{mdxType:"AuthRequestUsdButton"})))}y.isMDXComponent=!0}}]);