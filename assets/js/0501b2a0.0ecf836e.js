"use strict";(self.webpackChunkdev_blink_sv=self.webpackChunkdev_blink_sv||[]).push([[899],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=l,y=p["".concat(s,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(y,o(o({ref:t},u),{},{components:n})):a.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:l,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4746:(e,t,n)=>{n.d(t,{H:()=>o,a:()=>r});var a=n(7294);const l=(0,a.createContext)(),r=()=>(0,a.useContext)(l),o=e=>{let{children:t}=e;const[n,r]=(0,a.useState)(null),[o,i]=(0,a.useState)("https://api.blink.sv/graphql"),[s,c]=(0,a.useState)(""),[u,p]=(0,a.useState)(""),m={authToken:n,setAuthToken:r,apiEndpoint:o,setApiEndpoint:i,accountWalletId:s,setAccountWalletId:c,paymentRequest:u,setPaymentRequest:p};return a.createElement(l.Provider,{value:m},t)}},3871:(e,t,n)=>{n.d(t,{U:()=>i});var a=n(7294),l=n(7900),r=n(4746),o=n(2620);function i(){const{authToken:e,apiEndpoint:t,accountWalletId:n,setAccountWalletId:i,paymentRequest:s,setPaymentRequest:c}=(0,r.a)(),[u,p]=(0,a.useState)(1e3),[m,d]=(0,a.useState)(""),[y,h]=(0,a.useState)(null),[v,g]=(0,a.useState)(null);(0,a.useEffect)((()=>{(0,o.yL)({query:"mutation LnInvoicePaymentSend($input: LnInvoicePaymentInput!) {\n  lnInvoicePaymentSend(input: $input) {\n    status\n    errors {\n      message\n      path\n      code\n    }\n  }\n}",type:"lnInvoicePaymentSend",setCurlCommand:d,authToken:e,apiEndpoint:t,amount:u,accountWalletId:n,paymentRequest:s})}),[e,t,s,n]);return a.createElement("div",null,a.createElement("div",null,a.createElement("div",{style:{fontWeight:"bold"}},"Set the variables"),a.createElement("div",null,a.createElement("label",null,a.createElement("div",null,"Invoice"),a.createElement("input",{type:"text",value:s,onChange:e=>c(e.target.value),style:{marginLeft:"10px",width:"50%"},placeholder:"Paste a lightning invoice"}))),a.createElement("label",null,a.createElement("div",null,"BTC wallet ID:"),a.createElement("input",{type:"text",value:n,onChange:e=>{i(e.target.value)},style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the BTC wallet ID from the response above"}))),a.createElement("div",{style:{marginTop:"10px"}}),a.createElement("button",{onClick:async()=>{const a="mutation LnInvoicePaymentSend($input: LnInvoicePaymentInput!) {\n  lnInvoicePaymentSend(input: $input) {\n    status\n    errors {\n      message\n      path\n      code\n    }\n  }\n}",r={input:{paymentRequest:s,walletId:n}};try{const i=await(0,l.K)(e,t,a,r);h(i),(0,o.yL)({query:a,type:"lnInvoicePaymentSend",setCurlCommand:d,authToken:e,apiEndpoint:t,amount:u,accountWalletId:n,paymentRequest:s})}catch(i){g(i.message)}}},"Send payment"),a.createElement("div",{style:{marginTop:"10px"}}),v&&a.createElement("div",{style:{color:"red"}},"Error: ",v),y&&a.createElement("div",null,a.createElement("strong",null,"Response:")," ",a.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(y,null,2))),a.createElement("div",{style:{marginTop:"20px"}},a.createElement("div",{style:{fontWeight:"bold"}},"curl command to pay an invoice"),a.createElement("div",{style:{marginTop:"10px"}}),a.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},m)))}},2698:(e,t,n)=>{n.d(t,{k:()=>r});var a=n(7294),l=n(4746);function r(){const{apiEndpoint:e,setApiEndpoint:t}=(0,l.a)();return a.createElement("div",null,a.createElement("div",null,"The GraphQL endpoint to connect to:"),a.createElement("select",{type:"text",value:e,onChange:e=>{t(e.target.value)},style:{width:"50%",marginBottom:"10px"}},a.createElement("option",{value:"https://api.blink.sv/graphql"},"Blink (mainnet) - https://api.blink.sv/graphql"),a.createElement("option",{value:"https://api.staging.galoy.io/graphql"},"Staging (signet) - https://api.staging.galoy.io/graphql")))}},65:(e,t,n)=>{n.d(t,{T:()=>r});var a=n(7294),l=n(4746);function r(){const{setAuthToken:e}=(0,l.a)();return a.createElement("div",null,a.createElement("div",null,"The following methods require a valid auth token set in the header as a bearer token:"),a.createElement("input",{type:"text",placeholder:"Paste the authentication token to use it",onChange:t=>{const n=t.target.value;e(n)},style:{width:"50%",marginBottom:"10px"}}))}},7900:(e,t,n)=>{n.d(t,{K:()=>a});const a=async function(e,t,n,a){if(void 0===a&&(a={}),!e)throw new Error("Not authenticated");if(!n)throw new Error("No GraphQL query provided");try{const l=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:`bearer ${e}`},body:JSON.stringify({query:n,variables:a})});if(!l.ok){const e=await l.text();throw new Error(`Error response from server: ${e}`)}const r=l.headers.get("content-type");if(r&&r.includes("application/json")){return await l.json()}throw new Error(`Unexpected content type: ${r}`)}catch(l){throw console.error("There was an error making the authenticated request:",l),l}}},2620:(e,t,n)=>{n.d(t,{OP:()=>a,qF:()=>l,yL:()=>r});const a=(e,t)=>{const n={email:t};return`curl -X POST '${e}/auth/email/code' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data '${JSON.stringify(n)}'`},l=(e,t,n)=>`curl -X POST '${`${e}/auth/email/login`}' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data '${JSON.stringify({code:n,emailLoginId:t})}'`;function r(e){let{query:t,type:n,setCurlCommand:a,authToken:l,apiEndpoint:r,amount:o,accountWalletId:i,paymentRequest:s="",walletId:c="",walletCurrency:u=""}=e,p={query:t.trim(),variables:{}};const m=l?`--header 'Authorization: Bearer ${l}'`:"--header 'Authorization: Bearer <YOUR_AUTH_TOKEN_HERE>'";"invoice"===n?p.variables.input={amount:o.toString(),walletId:i}:"feeProbe"===n?p.variables.input={paymentRequest:s,walletId:i}:"lnInvoicePaymentSend"===n&&(p.variables.input={paymentRequest:s,walletId:c});let d=JSON.stringify(p).replace(/\n/g,"");a("wallet"===n?`curl -sS --request POST --header 'content-type: application/json' \\\n  ${m} \\\n  --url '${r}' \\\n  --data '{"query":"query me { me { defaultAccount { wallets { id walletCurrency }}}}", "variables":{}}' \\\n| jq '.data.me.defaultAccount.wallets[] | select(.walletCurrency == "${u}") .id'`:`curl --request POST --header 'content-type: application/json' \\\n  ${m} \\\n  --url '${r}' \\\n  --data '${d}'`)}},6206:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>v,default:()=>w,frontMatter:()=>h,metadata:()=>g,toc:()=>b});var a=n(7462),l=n(7294),r=n(3905),o=n(4746),i=n(2698),s=n(65),c=n(7900),u=n(2620);function p(){const{authToken:e,apiEndpoint:t}=(0,o.a)(),[n,a]=(0,l.useState)(""),[r,i]=(0,l.useState)(null),[s,p]=(0,l.useState)(null),m="  query Me {\n    me {\n      defaultAccount {\n        wallets {\n          id\n          walletCurrency\n          balance\n        }\n      }\n    }\n  }";return(0,l.useEffect)((()=>{(0,u.yL)({query:m,type:"wallet",setCurlCommand:a,authToken:e,apiEndpoint:t,walletCurrency:"USD"})}),[e,t]),l.createElement("div",null,l.createElement("button",{onClick:async()=>{try{const n=await(0,c.K)(e,t,m);i(n),(0,u.yL)({query:m,type:"wallet",setCurlCommand:a,authToken:e,apiEndpoint:t,walletCurrency:"USD"})}catch(n){p(n.message)}}},"Send the request"),l.createElement("div",{style:{marginTop:"10px"}}),s&&l.createElement("div",{style:{color:"red"}},"Error: ",s),r&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(r,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("div",{style:{fontWeight:"bold"}},"curl command to get the USD wallet ID"),l.createElement("div",{style:{marginTop:"10px"}}),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},n)))}function m(){const{authToken:e,apiEndpoint:t,accountWalletId:n,setAccountWalletId:a}=(0,o.a)(),[r,i]=(0,l.useState)(1e3),[s,p]=(0,l.useState)(""),[m,d]=(0,l.useState)(null),[y,h]=(0,l.useState)(null);(0,l.useEffect)((()=>{(0,u.yL)({query:"mutation lnUsdInvoiceCreate($input: LnUsdInvoiceCreateInput!) {\n  lnUsdInvoiceCreate(input: $input) {\n    invoice {\n      paymentRequest\n      paymentHash\n      paymentSecret\n      satoshis\n    }\n    errors {\n      message\n    }\n  }\n}",type:"invoice",setCurlCommand:p,authToken:e,apiEndpoint:t,amount:r,accountWalletId:n})}),[e,t,r,n]);return l.createElement("div",null,l.createElement("div",null,l.createElement("div",null,l.createElement("div",{style:{fontWeight:"bold"}},"Set the variables"),l.createElement("label",null,l.createElement("div",null,"Amount (USD cents):"),l.createElement("input",{type:"number",value:r,onChange:e=>{i(e.target.value)},style:{marginLeft:"10px",width:"50%"}}))),l.createElement("label",null,l.createElement("div",null,"USD wallet ID:"),l.createElement("input",{type:"text",value:n,onChange:e=>{a(e.target.value)},style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"}))),l.createElement("div",{style:{marginTop:"10px"}}),l.createElement("button",{onClick:async()=>{const a="mutation lnUsdInvoiceCreate($input: LnUsdInvoiceCreateInput!) {\n  lnUsdInvoiceCreate(input: $input) {\n    invoice {\n      paymentRequest\n      paymentHash\n      paymentSecret\n      satoshis\n    }\n    errors {\n      message\n    }\n  }\n}",l={input:{amount:r.toString(),walletId:n}};try{const o=await(0,c.K)(e,t,a,l);d(o),(0,u.yL)({query:a,type:"invoice",setCurlCommand:p,authToken:e,apiEndpoint:t,amount:r,accountWalletId:n})}catch(o){h(o.message)}}},"Create a Stablesats invoice"),l.createElement("div",{style:{marginTop:"10px"}}),y&&l.createElement("div",{style:{color:"red"}},"Error: ",y),m&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(m,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("div",{style:{fontWeight:"bold"}},"curl command to generate a Stablesats invoice"),l.createElement("div",{style:{marginTop:"10px"}}),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},s)))}function d(){const{authToken:e,apiEndpoint:t,accountWalletId:n,setAccountWalletId:a,paymentRequest:r,setPaymentRequest:i}=(0,o.a)(),[s,p]=(0,l.useState)(1e3),[m,d]=(0,l.useState)(""),[y,h]=(0,l.useState)(null),[v,g]=(0,l.useState)(null);(0,l.useEffect)((()=>{(0,u.yL)({query:"mutation lnUsdInvoiceFeeProbe($input: LnUsdInvoiceFeeProbeInput!) {\n  lnUsdInvoiceFeeProbe(input: $input) {\n    errors {\n      message\n    }\n    amount\n  }\n}",type:"feeProbe",setCurlCommand:d,authToken:e,apiEndpoint:t,amount:s,accountWalletId:n,paymentRequest:r})}),[e,t,r,n]);return l.createElement("div",null,l.createElement("div",null,l.createElement("div",{style:{fontWeight:"bold"}},"Set the variables"),l.createElement("div",null,l.createElement("label",null,l.createElement("div",null,"Invoice"),l.createElement("input",{type:"text",value:r,onChange:e=>i(e.target.value),style:{marginLeft:"10px",width:"50%"},placeholder:"Paste a lightning invoice"}))),l.createElement("label",null,l.createElement("div",null,"USD wallet ID:"),l.createElement("input",{type:"text",value:n,onChange:e=>{a(e.target.value)},style:{marginLeft:"10px",width:"50%"},placeholder:"Paste the USD wallet ID from the response above"}))),l.createElement("div",{style:{marginTop:"10px"}}),l.createElement("button",{onClick:async()=>{const a="mutation lnUsdInvoiceFeeProbe($input: LnUsdInvoiceFeeProbeInput!) {\n  lnUsdInvoiceFeeProbe(input: $input) {\n    errors {\n      message\n    }\n    amount\n  }\n}",l={input:{paymentRequest:r,walletId:n}};try{const o=await(0,c.K)(e,t,a,l);h(o),(0,u.yL)({query:a,type:"feeProbe",setCurlCommand:d,authToken:e,apiEndpoint:t,amount:s,accountWalletId:n,paymentRequest:r})}catch(o){g(o.message)}}},"Probe fee"),l.createElement("div",{style:{marginTop:"10px"}}),v&&l.createElement("div",{style:{color:"red"}},"Error: ",v),y&&l.createElement("div",null,l.createElement("strong",null,"Response:")," ",l.createElement("pre",{style:{marginLeft:"10px"}},JSON.stringify(y,null,2))),l.createElement("div",{style:{marginTop:"20px",marginBottom:"40px"}},l.createElement("h4",null,"curl command to probe invoice fee"),l.createElement("div",{style:{marginTop:"10px"}}),l.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},m)))}var y=n(3871);const h={id:"api-stablesats",title:"Send and receive Stablesats",slug:"/api/stablesats"},v=void 0,g={unversionedId:"api/api-stablesats",id:"api/api-stablesats",title:"Send and receive Stablesats",description:"Get the wallet IDs and check the balances",source:"@site/docs/api/b-usd-ln-send.mdx",sourceDirName:"api",slug:"/api/stablesats",permalink:"/api/stablesats",draft:!1,tags:[],version:"current",frontMatter:{id:"api-stablesats",title:"Send and receive Stablesats",slug:"/api/stablesats"},sidebar:"apiSidebar",previous:{title:"Get an authentication token",permalink:"/api/auth"},next:{title:"Send and receive satoshis",permalink:"/api/sats"}},E={},b=[{value:"Get the wallet IDs and check the balances",id:"get-the-wallet-ids-and-check-the-balances",level:3},{value:"Generate a Stablesats invoice",id:"generate-a-stablesats-invoice",level:3},{value:"Estimate the payment fee (probe)",id:"estimate-the-payment-fee-probe",level:3},{value:"Pay a lightning invoice",id:"pay-a-lightning-invoice",level:3}],f={toc:b},k="wrapper";function w(e){let{components:t,...n}=e;return(0,r.kt)(k,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.H,{mdxType:"AuthProvider"},(0,r.kt)(i.k,{mdxType:"SetApiEndpoint"}),(0,r.kt)(s.T,{mdxType:"SetAuthToken"}),(0,r.kt)("h3",{id:"get-the-wallet-ids-and-check-the-balances"},"Get the wallet IDs and check the balances"),(0,r.kt)("p",null,"Can run this query at any stage to confirm the change in the balances.",(0,r.kt)("br",null),'\nThe "BTC" wallet balance is denominated in satoshis.',(0,r.kt)("br",null),'\nThe "USD" wallet balance is in cents.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The body of the GraphQL request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"  query Me {\n    me {\n      defaultAccount {\n        wallets {\n          id\n          walletCurrency\n          balance\n        }\n      }\n    }\n  }\n")),(0,r.kt)(p,{mdxType:"GetWalletDataUsd"}),(0,r.kt)("h3",{id:"generate-a-stablesats-invoice"},"Generate a Stablesats invoice"),(0,r.kt)("p",null,"Using Stablesats a merchant can generate invoices denominated in USD cents. ",(0,r.kt)("br",null),"\nThe satoshi amount of the invoice will reflect the current USD/BTC exchange rate and the balance will be kept at the dollar value."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The body of the GraphQL request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"mutation lnUsdInvoiceCreate($input: LnUsdInvoiceCreateInput!) {\n  lnUsdInvoiceCreate(input: $input) {\n    invoice {\n      paymentRequest\n      paymentHash\n      paymentSecret\n      satoshis\n    }\n    errors {\n      message\n    }\n  }\n}\n")),(0,r.kt)(m,{mdxType:"LnUsdInvoiceCreate"}),(0,r.kt)("h3",{id:"estimate-the-payment-fee-probe"},"Estimate the payment fee (probe)"),(0,r.kt)("p",null,"Estimate the cost of paying a lightning invoice. ",(0,r.kt)("br",null),"\nPayments to an other Blink user and to nodes with a direct channel are free."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The body of the GraphQL request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"mutation lnUsdInvoiceFeeProbe($input: LnUsdInvoiceFeeProbeInput!) {\n  lnUsdInvoiceFeeProbe(input: $input) {\n    errors {\n      message\n    }\n    amount\n  }\n}\n")),(0,r.kt)(d,{mdxType:"LnUsdInvoiceFeeProbe"}),(0,r.kt)("h3",{id:"pay-a-lightning-invoice"},"Pay a lightning invoice"),(0,r.kt)("p",null,"Pay a BOLT11 invoice from your USD balance."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The body of the GraphQL request")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"mutation LnInvoicePaymentSend($input: LnInvoicePaymentInput!) {\n  lnInvoicePaymentSend(input: $input) {\n    status\n    errors {\n      message\n      path\n      code\n    }\n  }\n}\n")),(0,r.kt)(y.U,{mdxType:"LnInvoicePaymentSend"})))}w.isMDXComponent=!0}}]);