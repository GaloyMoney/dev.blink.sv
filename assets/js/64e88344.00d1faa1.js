"use strict";(self.webpackChunkdev_blink_sv=self.webpackChunkdev_blink_sv||[]).push([[165],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,m=p["".concat(u,".").concat(d)]||p[d]||h[d]||o;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5818:(e,t,n)=>{n.d(t,{H:()=>l,a:()=>o});var a=n(7294);const r=(0,a.createContext)(),o=()=>(0,a.useContext)(r),l=e=>{let{children:t}=e;const[n,o]=(0,a.useState)(null),[l,i]=(0,a.useState)("https://api.blink.sv/graphql"),[u,c]=(0,a.useState)(""),[s,p]=(0,a.useState)(""),h={authToken:n,setAuthToken:o,apiEndpoint:l,setApiEndpoint:i,accountWalletId:u,setAccountWalletId:c,paymentRequest:s,setPaymentRequest:p};return a.createElement(r.Provider,{value:h},t)}},3917:(e,t,n)=>{n.d(t,{OP:()=>a,nM:()=>r,qF:()=>o,yL:()=>l});const a=(e,t)=>{const n={email:t};return`curl -X POST '${e}/email/code' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data '${JSON.stringify(n)}'`},r=(e,t,n)=>{const a={query:"mutation login($input: UserLoginInput!) { userLogin(input: $input) { authToken } }",variables:{input:{phone:t,code:n}}};return`curl '${e}' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data-binary '${JSON.stringify(a)}'`},o=(e,t,n)=>`curl -X POST '${`${e}/email/login`}' \\\n  --header 'Content-Type: application/json' \\\n  --header 'Accept: application/json' \\\n  --data '${JSON.stringify({code:n,emailLoginId:t})}'`;function l(e){let{operation:t,type:n="",setCurlCommand:a,authToken:r,apiEndpoint:o,amount:l,paymentRequest:i="",walletId:u="",walletCurrency:c="",address:s}=e,p={query:t.trim(),variables:{}};const h=r?`--header 'Authorization: Bearer ${r}'`:"--header 'Authorization: Bearer <YOUR_AUTH_TOKEN_HERE>'";"invoice"===n?p.variables.input={amount:l.toString(),walletId:u}:"feeProbe"===n||"lnInvoicePaymentSend"===n?p.variables.input={paymentRequest:i,walletId:u}:"onChainTxFee"===n?p.variables={walletId:u,address:s,amount:l}:"onChainSend"===n&&(p.variables.input={walletId:u,address:s,amount:l});let d=JSON.stringify(p).replace(/\n/g,"");a("wallet"===n?`curl -sS --request POST --header 'content-type: application/json' \\\n  ${h} \\\n  --url '${o}' \\\n  --data '{"query":"query me { me { defaultAccount { wallets { id walletCurrency }}}}", "variables":{}}' \\\n| jq '.data.me.defaultAccount.wallets[] | select(.walletCurrency == "${c}") .id'`:`curl --request POST --header 'content-type: application/json' \\\n  ${h} \\\n  --url '${o}' \\\n  --data '${d}'`)}},6621:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>v,frontMatter:()=>s,metadata:()=>h,toc:()=>m});var a=n(7462),r=n(7294),o=n(3905),l=n(5818);var i=n(3917);const u=function(){const{authToken:e,setAuthToken:t}=(0,l.a)(),[n,a]=(0,r.useState)("https://api.blink.sv/auth"),[o,u]=(0,r.useState)(""),[c,s]=(0,r.useState)(""),[p,h]=(0,r.useState)(null),[d,m]=(0,r.useState)(null),[g,y]=(0,r.useState)(""),[v,k]=(0,r.useState)(!1),[f,E]=(0,r.useState)(null),[w,b]=(0,r.useState)(null),[T,S]=(0,r.useState)(""),[C,x]=(0,r.useState)(""),[O,P]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{const e=(0,i.OP)(n,o);S(e)}),[n,o]),(0,r.useEffect)((()=>{const e=(0,i.qF)(n,g,c);x(e)}),[n,g,c]),r.createElement("div",null,r.createElement("h3",null,"1) Request a 2FA code to your email"),r.createElement("div",{style:{marginTop:"10px"}}),r.createElement("div",null,r.createElement("div",null,"The REST authentication endpoint to connect to:"),r.createElement("select",{type:"text",value:n,onChange:e=>a(e.target.value),style:{width:"50%",marginBottom:"10px"}},r.createElement("option",{value:"https://api.blink.sv/auth"},"Blink (mainnet) - https://api.blink.sv/auth"),r.createElement("option",{value:"https://api.staging.galoy.io/auth"},"Staging (signet) - https://api.staging.galoy.io/auth")),r.createElement("div",null),r.createElement("input",{type:"email",placeholder:"Fill in the email address used for the account",value:o,onChange:e=>u(e.target.value),style:{width:"50%",marginBottom:"10px"}})),r.createElement("button",{onClick:async()=>{m(null),h(null);try{const e=await(async(e,t)=>{try{const n=await fetch(`${e}/email/code`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({email:t})}),a=await n.json();if(!n.ok)throw new Error(`HTTP Error: ${n.status}`);return a.result}catch(n){throw console.error("There was an error making the request:",n),n}})(n,o);y(e),h(`The emailLoginId: ${e} was obtained successfully! Check your email for the code.`)}catch(e){m(e.message)}}},"Request code"),r.createElement("div",{style:{marginTop:"20px"}},r.createElement("h4",null,"curl command to request an email code"),r.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},T)),d&&r.createElement("div",{style:{color:"red"}},"Error: ",d),p&&r.createElement("div",{style:{color:"green"}},p),r.createElement("div",{style:{margin:"20px 0"}}),r.createElement("div",{style:{marginTop:"40px"}},r.createElement("h3",null,"2) Enter the 2FA code received by email"),"The email login ID from the previous request:",r.createElement("div",null,r.createElement("input",{type:"text",placeholder:"Email login ID",value:g,onChange:e=>y(e.target.value),style:{width:"50%",marginBottom:"10px"}}),r.createElement("div",null),r.createElement("input",{type:"text",placeholder:"Fill in the code from the email",value:c,onChange:e=>s(e.target.value),style:{width:"50%",marginBottom:"10px"}})),r.createElement("button",{onClick:async()=>{if(b(null),E(null),!g||c.length<6)b("Invalid input");else{P(!0);try{const e=await(async(e,t,n)=>{try{const a=await fetch(`${e}/email/login`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({code:n,emailLoginId:t})}),r=await a.json();if(r.error){if("too many requests"===r.error)throw new Error("You've made too many requests. Please wait and try again later.");throw new Error(r.error)}if(!r.result?.authToken)throw new Error("Expected authToken not found in the response.");return r.result.authToken}catch(a){throw console.error("There was an error making the request:",a),a}})(n,g,c);t(e),E("Logged in successfully! Find your token below.")}catch(e){b(e.message)}finally{P(!1)}}},disabled:O},O?"Logging in...":"Log in to get your token")),r.createElement("div",{style:{marginTop:"20px"}},r.createElement("h4",null,"curl command for email login"),r.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},C)),w&&r.createElement("div",{style:{color:"red"}},"Error: ",w),f&&r.createElement("div",{style:{color:"green"}},f),e&&r.createElement("div",null,r.createElement("button",{onClick:()=>{k((e=>!e))}},"Click to show your Authentication token"),v&&r.createElement("div",null,r.createElement("strong",null,"Token:")," ",e)),r.createElement("div",{style:{marginTop:"20px"}}))};const c=function(){const{authToken:e,setAuthToken:t}=(0,l.a)(),[n,a]=(0,r.useState)("https://api.blink.sv/graphql"),[o,u]=(0,r.useState)(""),[c,s]=(0,r.useState)(""),[p,h]=(0,r.useState)(!1),[d,m]=(0,r.useState)(null),[g,y]=(0,r.useState)(null),[v,k]=(0,r.useState)("");return(0,r.useEffect)((()=>{k((0,i.nM)(n,o,c))}),[o,c,n]),r.createElement("div",null,r.createElement("div",null,r.createElement("h2",null,"Log in with phone and code"),r.createElement("div",null,"The GraphQL endpoint to connect to:"),r.createElement("select",{type:"text",value:n,onChange:e=>{a(e.target.value)},style:{width:"50%",marginBottom:"10px"}},r.createElement("option",{value:"https://api.blink.sv/graphql"},"Blink (mainnet) - https://api.blink.sv/graphql")),r.createElement("div",null),r.createElement("input",{type:"text",placeholder:"Phone",value:o,onChange:e=>{u(e.target.value)}}),r.createElement("div",null),r.createElement("input",{type:"text",placeholder:"Code",value:c,onChange:e=>{s(e.target.value)}}),r.createElement("div",null),r.createElement("button",{onClick:async()=>{if(y(null),m(null),o.length<10||c.length<6)y("Invalid input");else try{const e=await(async(e,t,n)=>{try{const a=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({query:"\n            mutation login($input: UserLoginInput!) {\n              userLogin(input: $input) {\n                authToken\n              }\n            }\n          ",variables:{input:{phone:t,code:n}}})}),r=await a.text();console.log("Raw Response:",r);const o=JSON.parse(r);if(!a.ok)throw new Error(`HTTP Error: ${a.status}`);if(o.errors&&o.errors.length>0)throw new Error(o.errors[0].message);if(!o.data?.userLogin?.authToken)throw new Error("Expected authToken not found in the response.");return o.data.userLogin.authToken}catch(a){throw console.error("There was an error making the request:",a),a}})(n,o,c);t(e),m("Got the auth token!"),k((0,i.nM)(n,o,c))}catch(e){y(e.message)}}},"Log in")),r.createElement("div",{style:{marginTop:"20px"}},r.createElement("h3",null,"curl command for phone login"),r.createElement("pre",{style:{backgroundColor:"auto",padding:"10px",marginLeft:"10px",overflowX:"auto",whiteSpace:"pre-wrap"}},v)),d&&r.createElement("div",{style:{color:"green"}},d),g&&r.createElement("div",{style:{color:"red"}},"Error: ",g),e&&r.createElement("div",null,r.createElement("button",{onClick:()=>{h((e=>!e))}},"Toggle Token Visibility"),p&&r.createElement("div",null,r.createElement("strong",null,"Token:")," ",e)))},s={id:"auth",title:"Authentication",slug:"/api/legacy/auth"},p=void 0,h={unversionedId:"api/legacy/auth",id:"api/legacy/auth",title:"Authentication",description:"There are multiple ways to obtain an auth token to be used with the API.",source:"@site/docs/api/legacy/auth.mdx",sourceDirName:"api/legacy",slug:"/api/legacy/auth",permalink:"/api/legacy/auth",draft:!1,tags:[],version:"current",frontMatter:{id:"auth",title:"Authentication",slug:"/api/legacy/auth"},sidebar:"apiSidebar",previous:{title:"Start with Blink",permalink:"/api/legacy/start"},next:{title:"Receive BTC on Lightning",permalink:"/api/legacy/btc-ln-receive"}},d={},m=[{value:"Log in with email through the REST API",id:"log-in-with-email-through-the-rest-api",level:2},{value:"Log in with phone and code",id:"log-in-with-phone-and-code",level:2},{value:"Copy the authentication token from the Blink app",id:"copy-the-authentication-token-from-the-blink-app",level:2}],g={toc:m},y="wrapper";function v(e){let{components:t,...n}=e;return(0,o.kt)(y,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are multiple ways to obtain an auth token to be used with the API."),(0,o.kt)("h2",{id:"log-in-with-email-through-the-rest-api"},"Log in with email through the REST API"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Make sure you have ",(0,o.kt)("a",{parentName:"p",href:"/api/start#add-an-email-address"},"registered your email address")," in the Blink app to use this method.")),(0,o.kt)(l.H,{mdxType:"AuthProvider"},(0,o.kt)(u,{mdxType:"LoginEmail"})),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The authentication token provides access to your wallet balance, save it securely as a password.\nUse it to make authenticated requests on the next pages or set it in the header as ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Bearer <ory_token>"),".")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"log-in-with-phone-and-code"},"Log in with phone and code"),(0,o.kt)("p",null,"Get a 2FA code to your phone number in the Blink app or the Dashboard and use it to log in."),(0,o.kt)(l.H,{mdxType:"AuthProvider"},(0,o.kt)(c,{mdxType:"LoginPhone"})),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"copy-the-authentication-token-from-the-blink-app"},"Copy the authentication token from the Blink app"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Create new account"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Start with trial account")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"Log back in with Phone or Email")),(0,o.kt)("li",{parentName:"ul"},"tap the menu on the top right and scroll down"),(0,o.kt)("li",{parentName:"ul"},"select the build number on the bottom 3 times"),(0,o.kt)("li",{parentName:"ul"},"select ",(0,o.kt)("inlineCode",{parentName:"li"},"Copy access token")," to save the token to your phone clipboard")))}v.isMDXComponent=!0}}]);