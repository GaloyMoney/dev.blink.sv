"use strict";(self.webpackChunkdev_blink_sv=self.webpackChunkdev_blink_sv||[]).push([[1],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(g,l(l({ref:t},s),{},{components:n})):r.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4449:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={id:"btcpayserver-plugin",title:"BTCPayServer plugin",slug:"/examples/btcpayserver-plugin"},l=void 0,o={unversionedId:"examples/btcpayserver-plugin",id:"examples/btcpayserver-plugin",title:"BTCPayServer plugin",description:"Use Blink as a lightning provider in BTCPayServer.",source:"@site/docs/examples/btcpayserver-plugin.md",sourceDirName:"examples",slug:"/examples/btcpayserver-plugin",permalink:"/examples/btcpayserver-plugin",draft:!1,tags:[],version:"current",frontMatter:{id:"btcpayserver-plugin",title:"BTCPayServer plugin",slug:"/examples/btcpayserver-plugin"},sidebar:"apiSidebar",previous:{title:"Lightning ATM integration",permalink:"/examples/lightning-atm"},next:{title:"Alby connector",permalink:"/examples/alby-connector"}},p={},c=[{value:"How to activate",id:"how-to-activate",level:2},{value:"Source code",id:"source-code",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,r.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use Blink as a lightning provider in ",(0,a.kt)("a",{parentName:"p",href:"https://btcpayserver.org"},"BTCPayServer"),".",(0,a.kt)("br",null),"\nAdd the default wallet or select between BTC and Stablesats."),(0,a.kt)("p",null,"Available in BTCPayServer v1.12.0 and later."),(0,a.kt)("h2",{id:"how-to-activate"},"How to activate"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"select ",(0,a.kt)("inlineCode",{parentName:"p"},"Manage Plugins")," in the left sidebar and  install the Blink plugin:\n",(0,a.kt)("img",{alt:"BTCPayServer plugin",src:n(5858).Z,width:"671",height:"524"}),"\nrestart your BTCPayServer instance.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"the option to connect to Blink will be available under the ",(0,a.kt)("inlineCode",{parentName:"p"},"Lightning")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"Settings")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"Change connection")," -> ",(0,a.kt)("inlineCode",{parentName:"p"},"Use custom node"),"\n",(0,a.kt)("img",{alt:"BTCPayServer plugin",src:n(9198).Z,width:"830",height:"1087"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"the connection script is minimum:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"type=blink;api-key=blink_...\n")),(0,a.kt)("p",{parentName:"li"},"In this case the Blink instance and the default wallet will be used.\nAlternatively:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"can specify a custom server (for development or to use an other instance of the Galoy backend)"),(0,a.kt)("li",{parentName:"ul"},"can choose a wallet-id from the dashboard to use different from the default set in your Blink wallet")))),(0,a.kt)("h2",{id:"source-code"},"Source code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Kukks/BTCPayServerPlugins/tree/master/Plugins/BTCPayServer.Plugins.Blink"},"github.com/Kukks/BTCPayServerPlugins/tree/master/Plugins/BTCPayServer.Plugins.Blink")))}m.isMDXComponent=!0},5858:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/btcpayserver_plugin-e8a871e2e8b91d6df88c5d160ce9656b.png"},9198:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/btcpayserver_plugin_connect-639194092fcfa60bbb6cb8a537116a56.png"}}]);